////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Bit2Adder.vf
// /___/   /\     Timestamp : 07/22/2025 16:41:59
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog /home/ise/VB_duplicate/NewProject/Bit2Adder.vf -w /home/ise/VB_duplicate/NewProject/Bit2Adder.sch
//Design Name: Bit2Adder
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FullAdder_MUSER_Bit2Adder(A, 
                                 B, 
                                 Cin, 
                                 Reset, 
                                 Cout, 
                                 Sum);

    input A;
    input B;
    input Cin;
    input Reset;
   output Cout;
   output Sum;
   
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_25;
   wire XLXN_26;
   
   XOR3  XLXI_1 (.I0(Cin), 
                .I1(B), 
                .I2(A), 
                .O(XLXN_25));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(XLXN_12));
   AND2  XLXI_3 (.I0(Cin), 
                .I1(A), 
                .O(XLXN_13));
   AND2  XLXI_4 (.I0(Cin), 
                .I1(B), 
                .O(XLXN_14));
   OR3  XLXI_5 (.I0(XLXN_14), 
               .I1(XLXN_13), 
               .I2(XLXN_12), 
               .O(XLXN_26));
   AND2  XLXI_6 (.I0(Reset), 
                .I1(XLXN_25), 
                .O(Sum));
   AND2  XLXI_7 (.I0(XLXN_26), 
                .I1(Reset), 
                .O(Cout));
endmodule
`timescale 1ns / 1ps

module HalfAdder_MUSER_Bit2Adder(A, 
                                 B, 
                                 Reset, 
                                 Cout, 
                                 Sum);

    input A;
    input B;
    input Reset;
   output Cout;
   output Sum;
   
   wire XLXN_7;
   wire XLXN_8;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_7));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(XLXN_8));
   AND2  XLXI_3 (.I0(Reset), 
                .I1(XLXN_7), 
                .O(Sum));
   AND2  XLXI_4 (.I0(XLXN_8), 
                .I1(Reset), 
                .O(Cout));
endmodule
`timescale 1ns / 1ps

module Bit2Adder(A, 
                 B, 
                 Clr, 
                 Cout, 
                 S);

    input [1:0] A;
    input [1:0] B;
    input Clr;
   output Cout;
   output [1:0] S;
   
   wire XLXN_15;
   
   HalfAdder_MUSER_Bit2Adder  XLXI_1 (.A(A[0]), 
                                     .B(B[0]), 
                                     .Reset(Clr), 
                                     .Cout(XLXN_15), 
                                     .Sum(S[0]));
   FullAdder_MUSER_Bit2Adder  XLXI_2 (.A(A[1]), 
                                     .B(B[1]), 
                                     .Cin(XLXN_15), 
                                     .Reset(Clr), 
                                     .Cout(Cout), 
                                     .Sum(S[1]));
endmodule
